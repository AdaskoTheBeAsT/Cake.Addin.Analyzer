//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cake.Addin.Analyzer
{
	using System;


	/// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class Resources
	{

		private static global::System.Resources.ResourceManager resourceMan;

		private static global::System.Globalization.CultureInfo resourceCulture;

		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal Resources()
		{
		}

		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager
		{
			get {
				if (object.ReferenceEquals(resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cake.Addin.Analyzer.Resources", typeof(Resources).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}

		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Globalization.CultureInfo Culture
		{
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Cake aliases should be marked with a category to be easier discovered on cakebuild.net..
		/// </summary>
		internal static string AliasClassCategoryDescription
		{
			get {
				return ResourceManager.GetString("AliasClassCategoryDescription", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to The class {0} is not marked with a Cake Alias Category..
		/// </summary>
		internal static string AliasClassCategoryMessageFormat
		{
			get {
				return ResourceManager.GetString("AliasClassCategoryMessageFormat", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Missing Cake Alias Category.
		/// </summary>
		internal static string AliasClassCategoryTitle
		{
			get {
				return ResourceManager.GetString("AliasClassCategoryTitle", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Cake method aliases needs to be marked with either a CakeMethodAlias or a CakePropertyAlias to be correctly identified and imported by the cake runner..
		/// </summary>
		internal static string MethodMarkedDescription
		{
			get {
				return ResourceManager.GetString("MethodMarkedDescription", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to The method {0} have not been marked with either a CakeMethodAlias or CakePropertyAlias to identify as an cake alias..
		/// </summary>
		internal static string MethodMarkedMessageFormat
		{
			get {
				return ResourceManager.GetString("MethodMarkedMessageFormat", resourceCulture);
			}
		}

		/// <summary>
		///   Looks up a localized string similar to Missing attribute to mark method as an alias..
		/// </summary>
		internal static string MethodMarkedTitle
		{
			get {
				return ResourceManager.GetString("MethodMarkedTitle", resourceCulture);
			}
		}
	}
}
